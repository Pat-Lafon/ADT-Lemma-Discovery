(declare-fun order (Int Int Int Int Int) Bool)
(declare-fun member (Int Int) Bool)
(declare-fun R1 (Int Int) Bool)
(declare-fun R2 (Int Int) Bool)
(declare-fun Post (Int Int Int) Bool)
(declare-const l0 Int)
(declare-const l1 Int)
(declare-const l2 Int)

(assert
 (let ((a!1 (forall ((l0 Int) (l1 Int)) (= (R1 l0 l1) (not (member l1 1))))))
   (and (R1 l0 l1)
        (R2 l1 l2)
        (Post l0 l1 l2)
        (forall ((l1 Int) (l2 Int))
                (let ((a!1 (forall ((u Int))
                                   (and (order l2 0 1 1 2) (=> (member l1 u) (member l2 u))))))
                  (= (R2 l1 l2) a!1)))
        a!1
        (forall ((l0 Int) (l1 Int) (l2 Int))
                (let ((a!1 (not (and (not (member l1 1)) (order l2 0 1 1 2)))))
                  (= (Post l0 l1 l2) a!1)))))
)

(check-sat)
