(set-option :timeout 30000)

(declare-fun list_member (Int Int) Bool)
(declare-fun list_head (Int Int) Bool)

(declare-const s1 Int)
(declare-const s2 Int)
(declare-const nu_top Int)
(declare-const nu_tail Int)
(declare-const nu_cons Int)
(declare-const x Int)
(declare-const r Int)
(declare-const f Int)
(declare-const f1 Int)
(declare-const r1 Int)
(declare-const |f'| Int)
(declare-const |r'| Int)
(declare-const lenf Int)
(declare-const |lenf'| Int)
(declare-const |lenr'| Int)
(declare-const lenr Int)
(declare-const lenr1 Int)


(assert
 (let ((a!1 (forall ((u_0 Int))
             (ite (list_member nu_cons u_0)
                  (or (= u_0 x) (list_member r u_0))
                  (and (not (= u_0 x)) (not (list_member r u_0))))))
      (a!2 (forall ((u_0 Int))
             (ite (list_member nu_cons u_0)
                  (list_member r1 u_0)
                  (not (list_member r1 u_0)))))
      (a!3 (forall ((u_0 Int))
             (ite (list_member f u_0)
                  (list_member f1 u_0)
                  (not (list_member f1 u_0)))))
      (a!4 (forall ((u_0 Int))
             (ite (list_member f1 u_0)
                  (list_member |f'| u_0)
                  (not (list_member |f'| u_0)))))
      (a!5 (forall ((u_0 Int) (u_1 Int))
             (let ((a!1 (ite (list_member nu_cons u_0)
                             (list_member r1 u_0)
                             (not (list_member r1 u_0)))))
               (or a!1 (not (= u_1 u_0)) a!1))))
      (a!6 (forall ((u_0 Int) (u_1 Int))
             (let ((a!1 (ite (list_member f u_0)
                             (list_member f1 u_0)
                             (not (list_member f1 u_0)))))
               (or a!1 (not (= u_1 u_0)) a!1))))
      (a!7 (forall ((u_0 Int) (u_1 Int))
             (let ((a!1 (ite (list_member f1 u_0)
                             (list_member |f'| u_0)
                             (not (list_member |f'| u_0)))))
               (or a!1 (not (= u_1 u_0)) a!1))))
      (a!8 (forall ((u Int))
             (= (or (list_member f u) (list_member r u) (= u x))
                (or (list_member |f'| u) (list_member |r'| u))))))
   (and
    (not a!4
     ;; not (and
     ;;      a!1
     ;;      a!2
     ;;      a!3
     ;;      a!4
     ;;      )
         )
       (= (+ lenr 1) lenr1)
       (forall ((u_0 Int) (u_1 Int))
         (let ((a!1 (ite (list_member nu_cons u_0)
                         (or (= u_0 x) (list_member r u_0))
                         (and (not (= u_0 x)) (not (list_member r u_0)))))
               (a!2 (ite (= u_0 x)
                         (or (list_member nu_cons x) (not (= x x)))
                         (or (not (list_member nu_cons x))
                             (not (list_member nu_cons u_0))
                             (= x u_0)
                             (list_member r u_0)))))
         (let ((a!3 (ite (= u_1 x)
                         a!2
                         (or (not (= u_1 u_0))
                             (not (list_member r u_0))
                             (= u_0 x)
                             (list_member nu_cons u_0)))))
           (or a!1 a!3))))
       a!5
       (= (<= lenr1 lenf) true)
       (= lenf |lenf'|)
       a!6
       a!7
       (= lenr |lenr'|)
       (= r1 |r'|)
       a!8))
 )
(check-sat)
